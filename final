(define (cube-root x) (try 1.0 x))

(define (square a)
  (* a a))
  
(define (abs d)
  (cond ((> d 0) d)
        ((= d 0) 0)
        ((< d 0) (- d))))
        
(define (try guess x)
  (if (good-enough? guess x)
      guess
      (try (improve guess x) x)))
      
(define (improve guess x)
  (/ (+ (/ x (square guess)) (* 2 guess)) 3))
  
(define (good-enough? guess x)
  (< (/ (abs (- guess (improve guess x))) guess)
    0.0001))
